Readme

I had to install crypto library by enabling virtual environment:
sudo apt update
sudo apt install python3 python3-pip
sudo pip3 install pycryptodome

python3 -m venv ~/pyenvs/hw4_env
source ~/pyenvs/hw4_env/bin/activate
pip install pycryptodome


And, then I ran the server:
python3 server363.py 127.0.0.1 8082


I also had to do the smae thing for the implant:
source ~/pyenvs/hw4_env/bin/activate
sudo python3 tmp363.py 127.0.0.1 8082


Making each file executable:
	chmod +x tmp363.py
	chmod +x server363.py

Description:
	tmp363 scans /home for the related ssh, config, aws, azure, cloud, and shell history files which could be hidden in further nested subdirectories. Then, it builds in memory the zip archive, encrypts using AES-CBC with PKCS7 padding and hardcoded key, then sends the encrypted archive over TCP to the server363
	
	server363 listens for incomnig connections (one at a time), receives the encrypted ciphertext, accounts for the pad and decrypts, and extracts files into a directory named on the basis of timestamp and the ip address of the implant. 
	
Libraries:
	- sys used to get command line arguments
	- os used to help with directory traversal, listing, and path joining
	- socket used to build connection between implant and server to transfer files
	- glob used to search for files and directories, in this case in recursive fashion
	- io used to handle various types of IO, buffer that lives in memory (read + write) without ever touching the disk
	- datetime used to format the resulting directory on server side based also on user ip and date/time of the upload
	- zipfile used to help build the zipfile archive that is to be transferred
	- cryptodome (part of pycryptodome) package used to help encrypted via AES CBC mode
	
	
Design:
	Implant looks for files based on pattern matching in the home directory including recursive search
	Then, it archives the files into zipfile, including encryption in AES CBC mode
	Then, it transfers the encrypted archive over a TCP connection to the server
	
	Server, then processes the archive to decrypt using the same hardcoded key, then unzip the archive, then store the files in datetime + implact ip format. 
